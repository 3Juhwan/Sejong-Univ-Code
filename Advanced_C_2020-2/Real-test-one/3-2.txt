#pragma warning (disable:4996)
#include <stdio.h>
#include <string.h>

int main() {
	char A[150] = "", B[10] = "", C[10] = "", * parr[15] = { NULL }, * found = NULL;
	char* p = A, * q = A;
	int len1 = 0, len2 = 0, len3 = 0, cnt = 0, Blen = 0, Clen = 0;
	int i = 0, j = 0;
	int size = 0;

	gets_s(A, 150);
	gets_s(B, 10);
	gets_s(C, 10);

	len2 = strlen(B);
	len3 = strlen(C);

	while (*p)
	{
		while (*p == ' ' && *(p + 1) == ' ')
		{
			q = p + 1;
			while (*q) {
				*q = *(q + 1);
				q++;
			}

			p--;
		}
		p++;
	}

	len1 = strlen(A);
	p = A;
	q = A;

	// 단어 쪼개기

	while (*p)
	{
		if (*p == ' ')
		{
			*p = '\0';
			parr[size] = q;
			size++;
			q += strlen(q) + 1;				/// 1번
		}
		p++;
	}

	// 찾기

	for (int i = 0; i < size; i++)
	{
		if (strcmp(parr[i], B) == 0)		// 2번
		{
			found = parr[i];
			break;
		}
	}

	Blen = strlen(B);
	Clen = strlen(C);

	if (Blen > Clen) {
		strcpy(found, C);			// 3번
		for (p = found; p < A + len1; p++)
			*(p + len3) = *(p + len2);
		len1 += len3 - len2;
	}

	else if (Blen == Clen) {
		strcpy(found, C);
	}

	else {
		for (p = A + len1; p >= found; p--)
			*(p + len3 - len2) = *p;
		strcpy(found, C);
	}

	// 띄워쓰기 살리기

	p = A;
	while (p < A + len1)
	{
		if (*p == '\0')
			*p = ' ';
		p++;
	}

	printf("%s", A);

	return 0;

}